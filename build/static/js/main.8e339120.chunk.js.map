{"version":3,"sources":["components/Footer.js","components/Error.js","components/Note.js","services/Note.js","services/login.js","components/LoginForm.js","components/Togglable.js","components/AddNote.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Error","props","className","message","Note","note","toggleImportant","deleteNote","buttonStyle","margin","label","important","listStyle","content","onClick","baseURL","token","logger","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","delete","setToken","newToken","login","credentials","LoginForm","handleLogin","username","password","handleUsernameChange","handlePasswordChange","onSubmit","type","value","name","onChange","Togglable","React","forwardRef","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","AddNote","addNote","newNote","setNewNote","e","preventDefault","newNoteToAdd","date","Date","toISOString","Math","random","target","disabled","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","noteFormRef","useRef","loginService","window","localStorage","setItem","JSON","stringify","noteService","setTimeout","current","returnedNotes","concat","catch","error","noteToShow","filter","useEffect","initialNotes","loggedNoteAppUser","getItem","parse","removeItem","padding","map","noteToChange","find","changedNote","handleToggleImportant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAgBeA,EAdA,WAMT,OACE,sBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GCDKC,EARD,SAACC,GACX,OACI,qBAAKC,UAAWD,EAAME,SAAW,iBAAjC,SACKF,EAAME,WCcJC,EAjBF,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,gBAAgBC,EAAgB,EAAhBA,WAI3BC,EAAc,CAChBC,OAAQ,OAENC,EAAQL,EAAKM,UAAY,oBAAsB,iBACrD,OACI,qBAAIf,MARQ,CACZgB,UAAW,QAOX,UACI,+BAAOP,EAAKQ,UACZ,wBAAQC,QAASR,EAAiBV,MAAOY,EAAzC,SAAuDE,IACvD,wBAAQI,QAASP,EAAYX,MAAOY,EAApC,wB,gBCZNO,EAAU,aAEZC,EAAQ,KAkDKC,EARA,CACbC,OArCW,WAEX,OADgBC,IAAMC,IAAIL,GACXM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAoCzCC,OA1BU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeb,IAFf,SAIUG,IAAMW,KAAKf,EAASU,EAAWE,GAJzC,cAIPL,EAJO,yBAKNA,EAASC,MALH,2CAAH,sDA2BVQ,OAnBU,uCAAG,WAAOC,EAAIP,GAAX,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeb,IAFf,SAIUG,IAAMc,IAAN,UAAalB,EAAb,YAAwBiB,GAAMP,EAAWE,GAJnD,cAIPL,EAJO,yBAKNA,EAASC,MALH,2CAAH,wDAoBVW,OAZc,uCAAG,WAAMF,GAAN,iBAAAN,EAAA,6DACXC,EAAS,CACbC,QAAS,CAAEC,cAAeb,IAFX,SAIMG,IAAMe,OAAN,UAAgBnB,EAAhB,YAA2BiB,GAAKL,GAJtC,cAIXL,EAJW,yBAKVA,EAASC,MALC,2CAAH,sDAadY,SA7Ca,SAAAC,GACfpB,EAAK,iBAAaoB,KCKLnB,EAJA,CACXoB,MALO,uCAAG,WAAMC,GAAN,eAAAZ,EAAA,sEACaP,IAAMW,KAHjB,aAG+BQ,GADjC,cACJhB,EADI,yBAEHA,EAASC,MAFN,2CAAH,uDCuBIgB,EAzBG,SAAC,GAMZ,IALHC,EAKE,EALFA,YACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,qBACAC,EACE,EADFA,qBAEA,OACI,gCACI,uCACA,uBAAMC,SAAUL,EAAhB,UACA,2CAEI,uBAAOM,KAAK,OAAOC,MAAON,EAAUO,KAAK,WAAWhB,GAAG,WAAWiB,SAAUN,OAEhF,2CAEI,uBAAOG,KAAK,WAAWC,MAAOL,EAAUM,KAAK,WAAWhB,GAAG,WAAWiB,SAAUL,OAEpF,wBAAQE,KAAK,SAASd,GAAG,eAAzB,0BCUGkB,EA7BGC,IAAMC,YAAW,SAACnD,EAAOoD,GAAS,IAAD,EACnBC,oBAAS,GADU,mBAC1CC,EAD0C,KACjCC,EADiC,KAG3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANCM,8BAAoBR,GAAK,WACxB,MAAO,CACLO,uBAKF,gCACE,qBAAKhE,MAAO6D,EAAZ,SACE,wBAAQ3C,QAAS8C,EAAjB,SAAoC3D,EAAM6D,gBAE5C,sBAAKlE,MAAO+D,EAAZ,UACG1D,EAAM8D,SACP,wBAAQjD,QAAS8C,EAAjB,6BCQOI,EA/BC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACKX,mBAAS,IADd,mBACnBY,EADmB,KACVC,EADU,KAmB3B,OACI,gCACI,mDACA,uBAAMtB,SAdM,SAACuB,GACjBA,EAAEC,iBACF,IAAMC,EAAe,CACjBzD,QAASqD,EACTK,MAAM,IAAIC,MAAOC,cACjB9D,UAAW+D,KAAKC,SAAW,IAG/BV,EAAQK,GACRH,EAAW,KAKP,UACI,uBAAOpB,MAAOmB,EAASjB,SApBV,SAACmB,GACtBA,EAAEC,iBACFF,EAAWC,EAAEQ,OAAO7B,UAmBZ,wBAAQD,KAAK,SAAS+B,UAAWX,EAAjC,wBC6IDY,EA5JH,WAAO,IAAD,EACUxB,mBAAS,IADnB,mBACTyB,EADS,KACFC,EADE,OAGc1B,oBAAS,GAHvB,mBAGT2B,EAHS,KAGAC,EAHA,OAI0B5B,mBAAS,IAJnC,mBAIR6B,EAJQ,KAIMC,EAJN,OAKiB9B,mBAAS,IAL1B,mBAKRb,EALQ,KAKE4C,EALF,OAMiB/B,mBAAS,IAN1B,mBAMRZ,EANQ,KAME4C,EANF,OAOUhC,mBAAS,MAPnB,mBAORiC,EAPQ,KAOFC,EAPE,KAqBVC,EAAcC,mBASdlD,EAAW,uCAAG,WAAO4B,GAAP,eAAA1C,EAAA,6DAClB0C,EAAEC,iBADgB,kBAGGsB,EAAatD,MAAM,CAACI,WAAUC,aAHjC,OAGV6C,EAHU,OAIhBK,OAAOC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUT,IAChEU,EAAY9D,SAASoD,EAAKvE,OAC1BwE,EAAQD,GACRF,EAAY,IACZC,EAAY,IARI,kDAUhBF,EAAgB,qBAChBc,YAAW,WACTd,EAAgB,MACf,KAba,0DAAH,sDAwBXnB,EAAU,SAACK,GAEfmB,EAAYU,QAAQvC,mBACpBqC,EACCzE,OAAO8C,GACPjD,MAAM,SAAA+E,GAEL9B,EAAatC,GAAIoE,EAAcpE,GAC/BgD,EAASD,EAAMsB,OAAO/B,OAGvBgC,OAAO,SAAAC,GACNnB,EAAgBmB,EAAMjF,SAASC,KAAKgF,OACpCL,YAAW,WACTd,EAAgB,MACf,SA4CDoB,EAAavB,EAAUF,EAAQA,EAAM0B,QAAQ,SAAApG,GAAI,OAAuB,IAAnBA,EAAKM,aAmBhE,OAjBA+F,qBAAU,WACRT,EACC/E,SACAG,MAAM,SAAAsF,GACL3B,EAAS2B,QAEV,IAEHD,qBAAU,WACR,IAAME,EAAoBhB,OAAOC,aAAagB,QAAQ,qBACtD,GAAGD,EAAkB,CACnB,IAAMrB,EAAOQ,KAAKe,MAAMF,GACxBpB,EAAQD,GACRU,EAAY9D,SAASoD,EAAKvE,UAE3B,IAGD,gCACE,cAAC,EAAD,CAAOb,QAASgF,IAChB,uCACW,OAATI,EA7HJ,cAAC,EAAD,CAAWzB,YAAY,QAAvB,SACE,cAAC,EAAD,CACErB,SAAUA,EACVC,SAAUA,EACVC,qBAAsB,gBAAGiC,EAAH,EAAGA,OAAH,OAAgBS,EAAYT,EAAO7B,QACzDH,qBAAsB,gBAAGgC,EAAH,EAAGA,OAAH,OAAgBU,EAAYV,EAAO7B,QACzDP,YAAaA,MAyHb,gCACE,8BAAI+C,EAAK9C,SAAT,eAA8B,wBAAQ3B,QA5FzB,WACnB8E,OAAOC,aAAakB,WAAW,qBAC/BvB,EAAQ,OA0F4B,qBAA9B,OApHN,cAAC,EAAD,CAAW1B,YAAY,WAAWT,IAAKoC,EAAvC,SACE,cAAC,EAAD,CACExB,QAASA,MAqHP,8BACE,yBAAQnD,QAtEO,WACvBoE,GAAYD,IAqEJ,kBAAyCA,EAAU,MAAQ,iBAE7D,oBAAIrF,MAAO,CAACoH,QAAS,OAArB,SACGR,EAAWS,KAAI,SAAA5G,GAAI,OAClB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,gBAAkB,kBAtEhC,SAAC0B,GAC7B,IAAMkF,EAAenC,EAAMoC,MAAM,SAAA9G,GAAI,OAAIA,EAAK2B,KAAOA,KAE/CoF,EAAW,2BAAQF,GAAR,IAAsBvG,WAAYuG,EAAavG,YAEhEsF,EACClE,OAAOC,EAAIoF,GACX/F,MAAM,SAAA+E,GAELpB,EAASD,EAAMkC,KAAK,SAAA5G,GAAI,OAAIA,EAAK2B,KAAOA,EAAK3B,EAAM+F,SAEpDE,OAAM,SAAAC,GAELnB,EAAgBmB,EAAMjF,SAASC,KAAKgF,OACpCL,YAAW,WACTd,EAAgB,MACf,QAsD6DiC,CAAsBhH,EAAK2B,KAAKzB,WAAa,kBAlDvFyB,EAkD8G3B,EAAK2B,QAhD3IiE,EACC/D,OAAOF,GACPX,MAAM,SAAA+E,GACLpB,EAASD,EAAM0B,QAAQ,SAAApG,GAAI,OAAIA,EAAK2B,KAAOA,SAE5CsE,OAAM,SAAAC,GAELnB,EAAgBmB,EAAMjF,SAASC,KAAKgF,OACpCL,YAAW,WACTd,EAAgB,MACf,QAZkB,IAACpD,IAkDH3B,EAAK2B,YAIxB,cAAC,EAAD,QC7JNsF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8e339120.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n      }\r\n      return (\r\n        <div style={footerStyle}>\r\n          <br />\r\n          <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default Footer\r\n\r\n","import React from 'react'\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <div className={props.message && 'errormsg_error'} >\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nconst Note = ({note, toggleImportant,deleteNote}) => {\r\n    const liStyle = {\r\n        listStyle: 'none',\r\n    }\r\n    const buttonStyle = {\r\n        margin: '5px'\r\n    }\r\n    const label = note.important ? 'make no important' : 'make important'\r\n    return (\r\n        <li style={liStyle}>\r\n            <span>{note.content}</span>\r\n            <button onClick={toggleImportant} style={buttonStyle}>{label}</button>\r\n            <button onClick={deleteNote} style={buttonStyle}>Delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import axios from \"axios\"\r\n\r\nconst baseURL = \"/api/notes\"\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n    // const nonExisting = {\r\n    //   id: 10000,\r\n    //   content: 'This note is not saved to server',\r\n    //   date: '2019-05-30T17:30:31.098Z',\r\n    //   important: true,\r\n    // }\r\n    // return request.then(response => response.data.concat(nonExisting))\r\n  }\r\n  \r\n  const create = async (newObject) => {\r\n    const config = { \r\n      headers: { Authorization: token},\r\n    }\r\n    const response = await axios.post(baseURL, newObject, config)\r\n    return response.data\r\n  }\r\n  \r\n  const update = async (id, newObject) => {\r\n    const config = { \r\n      headers: { Authorization: token},\r\n    }\r\n    const response = await axios.put(`${baseURL}/${id}`, newObject, config)\r\n    return response.data\r\n  }\r\n\r\n  const deleteNote = async id => {\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    }\r\n    const response = await axios.delete(`${baseURL}/${id}`,config)\r\n    return response.data\r\n  }\r\n  \r\n  const logger = {\r\n    getAll, \r\n    create, \r\n    update,\r\n    delete: deleteNote,\r\n    setToken\r\n  }\r\n\r\n  export default logger","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\nconst logger = {\r\n    login\r\n}\r\n\r\nexport default logger","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n    handleLogin,\r\n    username,\r\n    password,\r\n    handleUsernameChange,\r\n    handlePasswordChange\r\n}) => {\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleLogin}>\r\n            <div>\r\n                username\r\n                <input type=\"text\" value={username} name=\"username\" id=\"username\" onChange={handleUsernameChange}/>\r\n            </div>\r\n            <div>\r\n                passowrd\r\n                <input type=\"password\" value={password} name=\"password\" id=\"password\" onChange={handlePasswordChange}/>\r\n            </div>\r\n            <button type=\"submit\" id=\"login-button\">Login</button>\r\n            </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n   useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )}\r\n)\r\n\r\nexport default Togglable","import React, { useState } from 'react'\r\n\r\nconst AddNote = ({addNote}) => {\r\n    const [ newNote, setNewNote ] = useState('')\r\n\r\n    const handleNoteChange = (e) => {\r\n        e.preventDefault()\r\n        setNewNote(e.target.value)\r\n      }\r\n    \r\n    const addNoteData = (e) => {\r\n        e.preventDefault()\r\n        const newNoteToAdd = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() < 0.5\r\n        }\r\n\r\n        addNote(newNoteToAdd)\r\n        setNewNote('')\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Create a new note</h2>\r\n            <form onSubmit={addNoteData}>\r\n                <input value={newNote} onChange={handleNoteChange}/>\r\n                <button type='submit' disabled={!newNote}>Add</button>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddNote\r\n","//import axios from 'axios'\nimport React, { useEffect, useState, useRef } from 'react'\nimport Footer from './components/Footer'\nimport Error from './components/Error'\nimport Note from './components/Note'\nimport noteService from './services/Note'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\nimport Togglable from './components/Togglable'\nimport AddNote from './components/AddNote'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  //const [newNote, setNewNotes] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [ errorMessage, setErrorMessage ] = useState('')\n  const [ username, setUsername] = useState('') \n  const [ password, setPassword] = useState('') \n  const [ user, setUser ] = useState(null)\n  //const [loginVisible, setLoginVisible] = useState(false)\n\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleLogin={handleLogin}\n      />\n    </Togglable>\n  )\n  const noteFormRef = useRef()\n  const noteForm = () => (\n    <Togglable buttonLabel='new note' ref={noteFormRef}>\n      <AddNote \n        addNote={addNote} \n      />\n    </Togglable>\n  )\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try{\n      const user = await loginService.login({username, password})\n      window.localStorage.setItem('loggedNoteAppUser', JSON.stringify(user))\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    }catch(ex){\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedNoteAppUser')\n    setUser(null)\n  }\n\n\n\n  const addNote = (newNoteToAdd) => {\n    \n    noteFormRef.current.toggleVisibility()\n    noteService\n    .create(newNoteToAdd)\n    .then( returnedNotes => {\n      //console.log('after addd', returnedNotes)\n      newNoteToAdd.id= returnedNotes.id\n      setNotes(notes.concat(newNoteToAdd))\n      //setNewNotes('')\n    })\n    .catch( error => {\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n    })\n  }\n\n  const handleShowChange = () => {\n    setShowAll(!showAll)\n  }\n\n  const handleToggleImportant = (id) => {\n    const noteToChange = notes.find( note => note.id === id)\n    //console.log('noteTOChange ',noteToChange)\n    const changedNote = { ...noteToChange, important: !noteToChange.important}\n    //console.log('changedNote ',changedNote)\n    noteService\n    .update(id, changedNote)\n    .then( returnedNotes => {\n     // console.log(\"updateeeeeeeeeeeee\",returnedNotes)\n      setNotes(notes.map( note => note.id !== id ? note :returnedNotes))\n    })\n    .catch(error => {\n      //console.log('errror',error.response.data.error)\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n    })\n  }\n\n  const handleDeleteNote = (id) => {\n    //console.log('deleteeeeeee ', id);\n    noteService\n    .delete(id)\n    .then( returnedNotes => {\n      setNotes(notes.filter( note => note.id !== id))\n    })\n    .catch(error => {\n      //console.log('errror',error.response.data.error)\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n    })\n  }\n\n  const noteToShow = showAll ? notes : notes.filter( note => note.important === true)\n\n  useEffect(() => {\n    noteService\n    .getAll()\n    .then( initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedNoteAppUser = window.localStorage.getItem('loggedNoteAppUser')\n    if(loggedNoteAppUser){\n      const user = JSON.parse(loggedNoteAppUser)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n  \n  return (\n    <div>\n      <Error message={errorMessage}/>\n      <h1>Notes</h1>\n      { user === null \n      ? loginForm()\n      : <div>\n          <p>{user.username} logged in  <button onClick={handleLogout}>Log out</button> </p> \n          {noteForm()}\n          \n          <div>\n            <button onClick={handleShowChange}>Show {showAll ? 'All' : 'Important'}</button>\n          </div>\n          <ul style={{padding: '5px'}}>\n            {noteToShow.map(note => \n              <Note key={note.id} note={note} toggleImportant={ () => handleToggleImportant(note.id)} deleteNote={ () => handleDeleteNote(note.id)}/>\n            )}\n          </ul>\n        </div>}\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}